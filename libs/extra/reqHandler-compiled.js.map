{"version":3,"sources":["reqHandler.js"],"names":[],"mappings":"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","file":"reqHandler-compiled.js","sourcesContent":["/**\r\n * Created by AsTex on 27.06.2016.\r\n */\r\nvar libs = process.cwd() + '/libs/';\r\nvar log = require(libs + 'log')(module);\r\nvar Patient = require(libs + 'model/patient').Patient;\r\n\r\nfunction isApiAuthenticated(req) {\r\n    if (!req.get('X-API-KEY')) {\r\n        return false;\r\n    }\r\n    var token = req.get('X-API-KEY');\r\n    var patient = Patient.findOne({apiKey: token}, function (err, patient) {\r\n        if (err) return null;\r\n        if (!patient) return null;\r\n        console.log(patient._id);\r\n        if (patient.checkApiKey(token)) return patient;\r\n\r\n    });\r\n\r\n    console.log(patient._id);\r\n    if (patient._id) {\r\n        req.login(patient._id, function (err) {\r\n            if (!err)\r\n                console.log('Updated');\r\n            return true;\r\n        });\r\n    }\r\n}\r\n\r\n\r\nvar isLoggedIn = function (patientArea, doctorArea) {\r\n    return function (req, res, next) {\r\n        return next();\r\n        if (doctorArea && !patientArea) {\r\n            return next();\r\n        }\r\n        var token = req.get('X-API-KEY');\r\n\r\n        if (patientArea && !doctorArea) {\r\n\r\n            Patient.findOne({apiKey: token}, function (err, patient) {\r\n                if (err) {\r\n                    res.statusCode = 500;\r\n                    return res.send({error: 'Server Error'});\r\n                }\r\n                if (!patient) {\r\n                    res.statusCode = 500;\r\n                    return res.send({error: 'Server Error'});\r\n                }\r\n                console.log(patient._id);\r\n                if (patient.checkApiKey(token)) {\r\n                    req.authStrategy = 'Header';\r\n                    req.user = patient;\r\n                    return next();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (patientArea && doctorArea) {\r\n            if (req.isAuthenticated())\r\n                return next();\r\n            else {\r\n                Patient.findOne({apiKey: token}, function (err, patient) {\r\n                    if (err) {\r\n                        res.statusCode = 500;\r\n                        return res.send({error: 'Server Error'});\r\n                    }\r\n                    if (!patient) {\r\n                        res.statusCode = 500;\r\n                        return res.send({error: 'Server Error'});\r\n                    }\r\n                    console.log(patient._id);\r\n                    if (patient.checkApiKey(token)) {\r\n                        req.authStrategy = 'Header';\r\n                        req.user = patient;\r\n                        return next();\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n};\r\n\r\nmodule.exports.isLoggedIn = isLoggedIn;\r\n"]}