{"version":3,"sources":["treatments.js"],"names":[],"mappings":"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","file":"treatments-compiled.js","sourcesContent":["/**\r\n * Created by AsTex on 25.06.2016.\r\n */\r\nvar express = require('express');\r\nvar passport = require('passport');\r\nvar treatmentRouter = express.Router();\r\nvar issueRouter = express.Router({mergeParams: true});\r\ntreatmentRouter.use('/:treatmentId/issues', issueRouter);\r\nvar path = require('path'),\r\n    fs = require('fs');\r\n\r\nvar libs = process.cwd() + '/libs/';\r\nvar log = require(libs + 'log')(module);\r\n\r\nvar db = require(libs + 'db/mongoose');\r\nvar Patient = require(libs + 'model/patient').Patient;\r\nvar Treatment = require(libs + 'model/treatment');\r\nvar Issue = require(libs + 'model/issue');\r\nvar Image = require(libs + 'model/image');\r\nvar IssueComment = require(libs + 'model/issue');\r\nvar ObjectUpdater = require('../extra/objectHandler');\r\nvar requestHandler = require('../extra/reqHandler');\r\n\r\n\r\ntreatmentRouter.get('/', requestHandler.isLoggedIn(true, true), function (req, res) {\r\n    if (req.authStrategy === 'Header') {\r\n        console.log(req.user);\r\n        var findTreatmentsQuery = Treatment.find({'author': req.user._id});\r\n        findTreatmentsQuery.sort('-created');\r\n        findTreatmentsQuery.populate('issues');\r\n        findTreatmentsQuery.exec(function (err, treatments) {\r\n            if (err) {\r\n                res.statusCode = 500;\r\n                return res.send({error: 'Internal server error'});\r\n            } else {\r\n                if (!treatments) {\r\n                    return res.send({status: 'OK', treatments: []});\r\n                } else {\r\n                    return res.send({status: 'OK', treatments: treatments});\r\n                }\r\n            }\r\n\r\n        })\r\n    } else {\r\n        var offset = 0;\r\n        var limit = 5;\r\n        var type = 'Not answered';\r\n        console.log(req.query);\r\n        if (req.query.type) {\r\n            type = req.query.type;\r\n        }\r\n\r\n        //  if (req.query.offset) {\r\n        //    offset = req.query.offset;\r\n        // }\r\n        //if (req.query.limit) {\r\n        ///    limit = req.query.limit;\r\n        //} else {\r\n        //     limit = 10;\r\n        //}\r\n        //}\r\n        //{skip: offset, limit: limit, desc: 'created'}\r\n        var query = Treatment.find({'state': type});\r\n\r\n        query.populate('author');\r\n        query.skip(offset);\r\n        query.limit(limit);\r\n        query.sort('-created');\r\n        query.exec(function (err, treatments) {\r\n            if (err) {\r\n                res.statusCode = 500;\r\n                return res.send({error: 'Internal server error'});\r\n            } else {\r\n                if (!treatments) {\r\n                    return res.send({status: 'OK', type: type, treatments: []});\r\n                } else {\r\n                    offset = offset + treatments.length;\r\n                    return res.send({status: 'OK', type: type, offset: offset, treatments: treatments});\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\ntreatmentRouter.get('/:id', requestHandler.isLoggedIn(true, true), function (req, res) {\r\n    Treatment.findById(req.params.id).populate('issues').populate('author').exec(function (err, treatment) {\r\n        if (!err) {\r\n            return res.send({status: 'OK', treatment: treatment});\r\n        } else {\r\n            res.statusCode = 500;\r\n            return res.send({error: 'Internal error'});\r\n        }\r\n    });\r\n});\r\n\r\ntreatmentRouter.get('/:id/lastImage', function (req, res) {\r\n    Treatment.findById(req.params.id).populate('issues').exec(function (err, treatment) {\r\n        if (!err) {\r\n            var lastImage = \"\";\r\n            treatment.issues.forEach(function (item, i, arr) {\r\n                lastImage = item.images[item.images.length - 1];\r\n            });\r\n            Image.findById(lastImage, function (err, img) {\r\n                if (!err) {\r\n                    return res.sendFile(path.resolve(img.localPath));\r\n                } else {\r\n                    res.statusMessage = 404;\r\n                    res.send({status: 'Not Found'});\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n\r\ntreatmentRouter.post('/', requestHandler.isLoggedIn(true, false), function (req, res) {\r\n    var treatment = new Treatment({\r\n        author: req.user,\r\n        title: req.body.title,\r\n        bodyField: req.body.bodyField\r\n    });\r\n    // ObjectUpdater(treatment);\r\n    treatment.save(function (err) {\r\n        if (!err) {\r\n            log.info('Treatment created');\r\n            return res.send({status: 'OK', treatmentId: treatment._id})\r\n        } else {\r\n            log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n            console.log(err);\r\n            if (err.name == 'ValidationError') {\r\n                res.statusCode = 400;\r\n                return res.send({error: 'Validation error'});\r\n            } else {\r\n                res.statusCode = 500;\r\n                log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n                return res.send({error: 'Server Error'});\r\n            }\r\n            log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n        }\r\n    })\r\n\r\n});\r\n\r\nissueRouter.get('/', requestHandler.isLoggedIn(true, true), function (req, res) {\r\n    Treatment.findById(req.params.treatmentId).populate('author').populate('issues').sort('-issues.created').exec(function (err, treatment) {\r\n        if (err) {\r\n            res.statusCode = 500;\r\n            return res.send({error: 'Internal server error'})\r\n        }\r\n        else {\r\n            if (!treatment) {\r\n                res.statusCode = 404;\r\n                return res.send({error: 'Treatment not found'})\r\n            }\r\n            else {\r\n\r\n                if (req.authStrategy === 'Header') {\r\n                    log.info(treatment.author.id);\r\n                    log.info(req.user.id);\r\n\r\n                    if (treatment.author.id != req.user._id) {\r\n                        res.statusCode = 401;\r\n                        return res.send({error: 'You can request only your profile'});\r\n                    } else {\r\n\r\n                        var issues = treatment.issues.reverse();\r\n                        return res.send({status: 'OK', issues: issues});\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n});\r\n\r\nissueRouter.post('/', requestHandler.isLoggedIn(true, false), function (req, res) {\r\n    Treatment.findOne({'_id': req.params.treatmentId}).populate('author').exec(function (err, treatment) {\r\n        if (err) {\r\n            res.statusCode = 500;\r\n            return res.send({error: 'Internal server error'})\r\n        }\r\n        else {\r\n            if (!treatment) {\r\n                res.statusCode = 404;\r\n                return res.send({error: 'Treatment not found'})\r\n            }\r\n            else {\r\n                var issue = new Issue({\r\n                    size: req.body.size,\r\n                    surface: req.body.surface,\r\n                    bleeding: req.body.bleeding,\r\n                    colorModification: req.body.ColorModification || req.body.colorModification,\r\n                    surfaceModification: req.body.SurfaceModification || req.body.surfaceModification,\r\n                    lymphEnlarging: req.body.LymphEnlarging || req.body.lymphEnlarging,\r\n                    patientComment: req.body.PatientComment || req.body.patientComment,\r\n                    images: req.body.Images || req.body.images\r\n                });\r\n                ObjectUpdater(issue);\r\n                issue.save(function (err) {\r\n                    if (!err) {\r\n                        log.info('Issue created in treatment %s', treatment._id);\r\n                        Treatment.findByIdAndUpdate(treatment._id,\r\n                            {$push: {\"issues\": issue}},\r\n                            {safe: true, upsert: true, new: true}, function (err) {\r\n                                if (!err) {\r\n                                    return res.send({status: 'OK', issue: issue});\r\n                                }\r\n                            }\r\n                        );\r\n\r\n                    } else {\r\n                        console.log(err);\r\n                        if (err.name == 'ValidationError') {\r\n                            res.statusCode = 400;\r\n                            res.send({error: 'Validation error'});\r\n                        } else {\r\n                            res.statusCode = 500;\r\n                            res.send({error: 'Server Error'});\r\n                        }\r\n                        log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n                    }\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    })\r\n});\r\n\r\nissueRouter.put('/:issueId', requestHandler.isLoggedIn(true, true), function (req, res) {\r\n    Issue.findOne({'_id': req.params.issueId}).exec(function (err, issue) {\r\n        if (err) {\r\n            res.statusCode = 500;\r\n            return res.send({error: 'Internal server error'})\r\n        }\r\n        else {\r\n            if (!issue) {\r\n                res.statusCode = 404;\r\n                return res.send({error: 'Treatment not found'})\r\n            }\r\n            else {\r\n                var comment = new IssueComment({\r\n                    author: req.user,\r\n                    comment: req.body.comment,\r\n                    commentType: req.body.commentType\r\n                });\r\n                comment.save(function (err) {\r\n                    if (!err) {\r\n                        Issue.findByIdAndUpdate(issue._id, {$push: {'comments': comment}}, {\r\n                            safe: true,\r\n                            upsert: true,\r\n                            new: true\r\n                        }, function (err) {\r\n                            if (!err) {\r\n                                Treatment.findByIdAndUpdate(req.params.treatmentId,\r\n                                    {$set: {'state': 'Answered'}})\r\n                                    .exec(function (err, treatment) {\r\n                                        if (!err) {\r\n\r\n                                            return res.send({status: 'OK', treatment: treatment, issue: issue});\r\n                                        }\r\n                                    });\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    })\r\n});\r\n\r\nissueRouter.get('/:issueId/setState', requestHandler.isLoggedIn(true, true), function (req, res) {\r\n    Treatment.findById(req.params.treatmentId, function (err, treatment) {\r\n        if (!err) {\r\n            ObjectUpdater(treatment);\r\n            var ic = new IssueComment({\r\n                comment: req.query.comment\r\n            });\r\n            ic.save(function (err) {\r\n\r\n                treatment.result = req.query.grade;\r\n                treatment.state = 'Answered';\r\n                treatment.save(function (err) {\r\n                    if (!err) {\r\n                        Issue.findById(req.params.issueId, function (err, issue) {\r\n                            if (!err) {\r\n                                issue.comment = ic;\r\n                                issue.save(function (err) {\r\n                                    if (!err) {\r\n                                        return res.send({status: 'OK', treatment: treatment});\r\n                                    } else {\r\n                                        res.statusCode = 500;\r\n                                        console.log(err);\r\n                                        return res.send({status: 'Server error'});\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                res.statusCode = 500;\r\n                                console.log(err);\r\n                                return res.send({status: 'Server error'});\r\n                            }\r\n                        });\r\n                    } else {\r\n                        res.statusCode = 500;\r\n                        console.log(err);\r\n                        return res.send({status: 'Server error'});\r\n                    }\r\n\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n});\r\n\r\nmodule.exports = treatmentRouter;\r\n"]}