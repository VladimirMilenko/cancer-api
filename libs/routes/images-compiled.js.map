{"version":3,"sources":["images.js"],"names":[],"mappings":";;;;;AAGA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,SAAS,QAAQ,MAAR,EAAb;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AAAA,IACI,KAAK,QAAQ,IAAR,CADT;;AAIA,IAAI,OAAO,QAAQ,GAAR,KAAgB,QAA3B;AACA,IAAI,MAAM,QAAQ,OAAO,KAAf,EAAsB,MAAtB,CAAV;;AAEA,IAAI,KAAK,QAAQ,OAAO,aAAf,CAAT;AACA,IAAI,QAAQ,QAAQ,gBAAR,CAAZ;AACA,IAAI,iBAAiB,QAAQ,qBAAR,CAArB;;AAEA,OAAO,IAAP,CAAY,GAAZ,EAAiB,eAAe,UAAf,CAA0B,IAA1B,EAA+B,KAA/B,CAAjB,EAAwD,OAAO,EAAC,MAAM,YAAP,EAAP,EAA6B,MAA7B,CAAoC,KAApC,CAAxD,EAAoG,UAAU,GAAV,EAAe,GAAf,EAAoB;AACpH,QAAI,UAAU,OAAO,WAAP,CAAmB,EAAnB,EAAuB,QAAvB,CAAgC,KAAhC,CAAd;AACA,QAAI,WAAW,IAAI,IAAJ,CAAS,IAAxB;AAAA,QACI,aAAa,KAAK,OAAL,CAAa,eAAe,OAAf,GAAyB,MAAtC,CADjB;AAEA,YAAQ,GAAR,CAAY,UAAZ;AACA,QAAI,YAAY,KAAK,OAAL,CAAa,IAAI,IAAJ,CAAS,YAAtB,EAAoC,WAApC,EAAhB;AACA,QAAI,cAAc,MAAd,IAAwB,cAAc,MAAtC,IAAgD,aAAa,OAAjE,EAA0E;AACtE,WAAG,MAAH,CAAU,QAAV,EAAoB,UAApB,EAAgC,UAAU,GAAV,EAAe;AAC3C,gBAAI,GAAJ,EAAS;AACL,oBAAI,UAAJ,GAAiB,GAAjB;AACA,oBAAI,IAAJ,CAAS,EAAC,OAAO,uBAAR,EAAT;AACH,aAHD,MAGO;AACH,oBAAI,MAAM,IAAI,KAAJ,CAAU;AAChB,+BAAW;AADK,iBAAV,CAAV;AAGA,oBAAI,IAAJ,CAAS,UAAU,GAAV,EAAe;AACpB,wBAAI,CAAC,GAAL,EAAU;AACN,+BAAO,IAAI,IAAJ,CAAS,EAAC,QAAQ,IAAT,EAAe,SAAS,IAAI,GAA5B,EAAT,CAAP;AACH,qBAFD,MAEO;AACH,gCAAQ,GAAR,CAAY,GAAZ;AACA,4BAAI,UAAJ,GAAiB,GAAjB;AACA,+BAAO,IAAI,IAAJ,CAAS,EAAC,OAAO,uBAAR,EAAT,CAAP;AACH;AACJ,iBARD;AASH;AACJ,SAlBD;AAmBH,KApBD,MAoBO;AACH,WAAG,MAAH,CAAU,QAAV,EAAoB,YAAY;AAC5B,gBAAI,UAAJ,GAAiB,GAAjB;AACA,mBAAO,IAAI,IAAJ,CAAS,EAAC,OAAO,0CAAR,EAAT,CAAP;AACH,SAHD;AAIH;AACJ,CAhCD;;AAkCA,OAAO,GAAP,CAAW,MAAX,EAAmB,UAAU,GAAV,EAAe,GAAf,EAAoB;;AAEnC,UAAM,QAAN,CAAe,IAAI,MAAJ,CAAW,EAA1B,EAA8B,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC9C,YAAI,CAAC,GAAL,EAAU;AACN,mBAAO,IAAI,QAAJ,CAAa,KAAK,OAAL,CAAa,IAAI,SAAjB,CAAb,CAAP;AACH,SAFD,MAEO;AACH,gBAAI,CAAC,GAAL,EAAU;AACN,oBAAI,UAAJ,GAAiB,GAAjB;AACA,uBAAO,IAAI,IAAJ,CAAS,EAAC,OAAO,gBAAR,EAAT,CAAP;AACH;AACD,gBAAI,UAAJ,GAAiB,GAAjB;AACA,mBAAO,IAAI,IAAJ,CAAS,EAAC,OAAO,uBAAR,EAAT,CAAP;AACH;AACJ,KAXD;AAYH,CAdD;;AAgBA,OAAO,OAAP,GAAiB,MAAjB","file":"images-compiled.js","sourcesContent":["/**\r\n * Created by AsTex on 25.06.2016.\r\n */\r\nvar crypto = require('crypto');\r\nvar express = require('express');\r\nvar multer = require('multer');\r\nvar passport = require('passport');\r\nvar router = express.Router();\r\nvar path = require('path'),\r\n    fs = require('fs');\r\n\r\n\r\nvar libs = process.cwd() + '/libs/';\r\nvar log = require(libs + 'log')(module);\r\n\r\nvar db = require(libs + 'db/mongoose');\r\nvar Image = require('../model/image');\r\nvar requestHandler = require('../extra/reqHandler');\r\n\r\nrouter.post('/', requestHandler.isLoggedIn(true,false), multer({dest: './uploads/'}).single('upl'), function (req, res) {\r\n    var newName = crypto.randomBytes(16).toString('hex');\r\n    var tempPath = req.file.path,\r\n        targetPath = path.resolve('./uploads/' + newName + '.jpg');\r\n    console.log(targetPath);\r\n    var extension = path.extname(req.file.originalname).toLowerCase();\r\n    if (extension === '.png' || extension === '.jpg' || extension == '.jpeg') {\r\n        fs.rename(tempPath, targetPath, function (err) {\r\n            if (err) {\r\n                res.statusCode = 500;\r\n                res.send({error: 'Internal server error'});\r\n            } else {\r\n                var img = new Image({\r\n                    localPath: targetPath\r\n                });\r\n                img.save(function (err) {\r\n                    if (!err) {\r\n                        return res.send({status: 'Ok', imageId: img._id});\r\n                    } else {\r\n                        console.log(err);\r\n                        res.statusCode = 500;\r\n                        return res.send({error: 'Internal server error'});\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    } else {\r\n        fs.unlink(tempPath, function () {\r\n            res.statusCode = 500;\r\n            return res.send({error: 'Only .png, .jpg, .jpeg files are allowed'});\r\n        });\r\n    }\r\n});\r\n\r\nrouter.get('/:id', function (req, res) {\r\n    //return res.sendfile(path.resolve('F:/cancer-node/uploads/',req.params.id+'.jpg'));\r\n    Image.findById(req.params.id, function (err, img) {\r\n        if (!err) {\r\n            return res.sendfile(path.resolve(img.localPath));\r\n        } else {\r\n            if (!img) {\r\n                res.statusCode = 404;\r\n                return res.send({error: 'No image found'})\r\n            }\r\n            res.statusCode = 500;\r\n            return res.send({error: 'Internal server error'})\r\n        }\r\n    });\r\n});\r\n\r\nmodule.exports = router;"]}