{"version":3,"sources":["patients.js"],"names":[],"mappings":"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","file":"patients-compiled.js","sourcesContent":["/**\r\n * Created by AsTex on 25.06.2016.\r\n */\r\nvar express = require('express');\r\nvar passport = require('passport');\r\nvar userRouter = express.Router();\r\nvar reqHandler = require('../extra/reqHandler');\r\n\r\nvar treatmentsRouter = express.Router({mergeParams: true});\r\nuserRouter.use('/:userId/treatments', treatmentsRouter);\r\n\r\nvar libs = process.cwd() + '/libs/';\r\nvar log = require(libs + 'log')(module);\r\nvar ObjectId = require('mongoose').Types.ObjectId;\r\n\r\nvar db = require(libs + 'db/mongoose');\r\nvar Patient = require(libs + 'model/patient').Patient;\r\nvar Treatment = require(libs + 'model/treatment');\r\nconst pageLimit = 5;\r\n\r\nuserRouter.get('/settings', function (req, res) {\r\n    Patient.count({}, function (err, c) {\r\n        if (!err) {\r\n            var totalPages = Math.ceil(c / pageLimit);\r\n            return res.send({status: 'OK', count: c, pageLimit: pageLimit, totalPages: totalPages});\r\n        } else {\r\n            return res.send({error: 'Server error'});\r\n        }\r\n    })\r\n});\r\n\r\nuserRouter.get('/', reqHandler.isLoggedIn(true, true), function (req, res) {\r\n\r\n    var offset = 0;\r\n    console.log(req.query);\r\n    if (req.query.offset)\r\n        offset = parseInt(req.query.offset);\r\n    var query = Patient.find({});\r\n    query.skip(offset);\r\n    query.limit(pageLimit);\r\n    var count = 0;\r\n    Patient.count({}, function (err, c) {\r\n        if (!err)\r\n            count = c;\r\n    });\r\n    return query.exec(function (err, patients) {\r\n        if (!err) {\r\n            return res.send({status: 'OK', offset: offset, patients: patients});\r\n        } else {\r\n            res.statusCode = 500;\r\n            log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n            return res.send({error: 'Server error'});\r\n        }\r\n    });\r\n});\r\nuserRouter.post('/', function (req, res) {\r\n    log.error(req.body);\r\n    var patient = new Patient({\r\n        firstName: req.body.firstName,\r\n        lastName: req.body.lastName,\r\n        secondName: req.body.secondName,\r\n        email: req.body.email,\r\n        password: req.body.password,\r\n        phone: req.body.phone,\r\n        location: req.body.location,\r\n        gender: req.body.gender,\r\n        birthDate: req.body.birthDate,\r\n        policyNumber: req.body.policyNumber\r\n    });\r\n\r\n    patient.save(function (err) {\r\n        if (!err) {\r\n            log.info(\"Patient created\");\r\n            return res.send({status: 'OK', patient: patient, apiKey: patient.apiKey, _id: patient._id});\r\n        } else {\r\n            console.log(err);\r\n            if (err.name == 'ValidationError') {\r\n                res.statusCode = 400;\r\n                res.send({error: 'Validation error'});\r\n            } else {\r\n                res.statusCode = 500;\r\n                res.send({error: 'Server Error'});\r\n            }\r\n            log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n        }\r\n\r\n    });\r\n});\r\n//,passport.authenticate(['Header','local']),\r\nuserRouter.get('/:id', reqHandler.isLoggedIn(true,true), function (req, res) {\r\n    log.debug(req.get('apikey'));\r\n    if (req.authStrategy === 'Header') {\r\n        if (req.params.id !== req.user._id) {\r\n            res.statusCode = 401;\r\n            return res.send({error: 'You can request only your profile'});\r\n        }\r\n    }\r\n    return Patient.findById(req.params.id, function (err, patient) {\r\n        if (!patient) {\r\n            res.statusCode = 404;\r\n            return res.send({error: 'Patient not found'});\r\n        }\r\n        if (!err) {\r\n            return res.send({\r\n                status: 'OK',\r\n                patient: patient\r\n            });\r\n        } else {\r\n            res.statusCode = 500;\r\n            log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n            res.send({\r\n                error: 'Server error'\r\n            });\r\n        }\r\n    })\r\n});\r\n\r\nuserRouter.put('/:id', passport.authenticate('Header'), function (req, res) {\r\n\r\n    return Patient.findById(req.params.id, function (err, patient) {\r\n        if (!patient) {\r\n            res.statusCode = 404;\r\n            return res.send({error: 'Patient not found'});\r\n        }\r\n        patient.firstName = req.body.firstName;\r\n        patient.lastName = req.body.lastName;\r\n        patient.secondName = req.body.secondName;\r\n        patient.location = req.body.location;\r\n        patient.policyNumber = req.body.policyNumber;\r\n        return patient.save(function (err) {\r\n            if (!err) {\r\n                log.info('Patient updated');\r\n                return res.send({status: 'OK', patient: patient});\r\n            } else {\r\n                if (err.name == 'ValidationError') {\r\n                    res.statusCode = 400;\r\n                    res.send({error: 'Validation Error'});\r\n                } else {\r\n                    res.statusCode = 500;\r\n                    res.send({error: 'Server error'});\r\n                }\r\n                log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n            }\r\n        });\r\n    })\r\n});\r\nuserRouter.delete('/:id', function (res, req) {\r\n    return PatientModel.findById(req.params.id, function (err, patient) {\r\n        if (!patient) {\r\n            res.statusCode = 404;\r\n            return res.send({error: 'Patient not found'});\r\n        }\r\n        return patient.remove(function (err) {\r\n            if (!err) {\r\n                log.info('Patient removed');\r\n                return res.send({status: 'OK'});\r\n            } else {\r\n                res.statusCode = 500;\r\n                log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n                return res.send({error: 'Server Error'});\r\n            }\r\n        })\r\n    });\r\n});\r\n\r\ntreatmentsRouter.get('/', reqHandler.isLoggedIn(true, true), function (req, res) {\r\n    if (req.authStrategy === 'Header') {\r\n        log.error(req.user._id + ' ' + req.params.userId);\r\n        if (req.params.userId != req.user._id) {\r\n            res.statusCode = 401;\r\n            return res.send({error: 'You can request only your profile'});\r\n        }\r\n    } else {\r\n        var query = Treatment.find({'author': req.params.userId});\r\n        query.populate('issues');\r\n        query.exec(function (err, treatments) {\r\n            if (!err) {\r\n                return res.send({status: 'OK', treatments: treatments});\r\n            } else {\r\n                res.statusCode = 500;\r\n                log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n                return res.send({\r\n                    error: 'Server error'\r\n                });\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n})\r\n;\r\n\r\ntreatmentsRouter.get('/:treatmentId', passport.authenticate(['header', 'local']), function (req, res) {\r\n    if (req.authStrategy === 'Header') {\r\n        if (req.params.userId != req.user._id) {\r\n            res.statusCode = 401;\r\n            return res.send({error: 'You can request only your profile'});\r\n        }\r\n        else {\r\n            Treatment.find({'author': req.params.userId, '_id': req.params.treatmentId}, function (err, treatment) {\r\n                if (!err) {\r\n                    return res.send({status: 'OK', treatment: treatment});\r\n                } else {\r\n                    res.statusCode = 500;\r\n                    log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n                    res.send({\r\n                        error: 'Server error'\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\nmodule.exports = userRouter;"]}