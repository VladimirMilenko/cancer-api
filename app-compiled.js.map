{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["/**\r\n * Created by AsTex on 25.06.2016.\r\n */\r\nvar express = require('express');\r\nvar session = require('express-session');\r\nvar logger = require('morgan');\r\nvar log = require('./libs/log')(module);\r\nvar multer = require('multer');\r\nvar methodOverride = require('method-override');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\nvar favicon = require('serve-favicon');\r\nvar path = require('path');\r\nvar cors = require('cors');\r\nvar passport = require('passport');\r\nrequire('./libs/auth/auth');\r\nvar config =require('./libs/config');\r\nvar mongoose = require('./libs/db/mongoose');\r\nvar flash = require('connect-flash');\r\nconst MongoStore = require('connect-mongo')(session);\r\n\r\nvar doctors = require('./libs/routes/doctors');\r\nvar patients = require('./libs/routes/patients');\r\nvar tokens = require('./libs/routes/tokens');\r\nvar images = require('./libs/routes/images');\r\nvar treatments = require('./libs/routes/treatments');\r\nvar app = express();\r\n\r\n\r\napp.use(cors());\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json({uploadDir:'./temp/images'}));\r\napp.use(methodOverride());\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\n\r\n\r\napp.use(session({ secret: 'SECRET',\r\n    saveUninitialized: true,\r\n    resave: true,\r\n    store: new MongoStore({\r\n        mongooseConnection: mongoose.connection,\r\n        collection: 'sessions'\r\n    })}));\r\napp.use(passport.initialize());\r\napp.use(flash());\r\n\r\n\r\napp.use(passport.session());\r\napp.use('/api/patients', patients);\r\napp.use('/api/treatments', treatments);\r\napp.use('/api/token',tokens);\r\napp.use('/api/images', images);\r\napp.use('/api/doctors', doctors);\r\n\r\n\r\napp.use(function (req,res,next) {\r\n    res.status(404);\r\n    log.error('Not found URL: %s', req.url);\r\n    res.send({error:'Not Found'});\r\n    return;\r\n});\r\n\r\napp.use(function (err,req,res,next)  {\r\n    res.status(err.status || 500);\r\n    console.log(req);\r\n    log.error('Internal error(%d): %s', res.statusCode, err.message);\r\n    return;\r\n});\r\n\r\napp.get('/ErrorExample', function (req, res, next) {\r\n    next(new Error('Random error!'));\r\n});\r\n\r\n\r\n\r\napp.listen(config.get('port'), function(){\r\n    console.log('Express server listening on port 1337');\r\n});"]}